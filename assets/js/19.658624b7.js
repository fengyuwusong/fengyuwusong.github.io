(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{358:function(s,a,t){"use strict";t.r(a);var n=t(0),e=Object(n.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h3",{attrs:{id:"gmp设计思想"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gmp设计思想"}},[s._v("#")]),s._v(" GMP设计思想")]),s._v(" "),a("h4",{attrs:{id:"调度器的由来"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#调度器的由来"}},[s._v("#")]),s._v(" 调度器的由来")]),s._v(" "),a("h5",{attrs:{id:"单进程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#单进程"}},[s._v("#")]),s._v(" 单进程")]),s._v(" "),a("p",[s._v("一个进程只能处理一个任务，故不需要调度器")]),s._v(" "),a("h5",{attrs:{id:"多进程-线程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多进程-线程"}},[s._v("#")]),s._v(" 多进程/线程")]),s._v(" "),a("p",[s._v("进程阻塞时，可以切换其他进程来执行其他任务")]),s._v(" "),a("ul",[a("li",[s._v("优点\n"),a("ul",[a("li",[s._v("可以并发执行任务")])])]),s._v(" "),a("li",[s._v("缺点\n"),a("ul",[a("li",[s._v("高内存占用")]),s._v(" "),a("li",[s._v("调度的高消耗CPU")]),s._v(" "),a("li",[s._v("锁&竞争冲突")])])])]),s._v(" "),a("h5",{attrs:{id:"协程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#协程"}},[s._v("#")]),s._v(" 协程")]),s._v(" "),a("ul",[a("li",[s._v("解决多进程&线程的缺点而被设计")]),s._v(" "),a("li",[s._v("线程和协程关系\n"),a("ul",[a("li",[s._v("N:1\n"),a("ul",[a("li",[s._v("缺点：无法使用硬件多核能力、协程阻塞则无法并行")])])]),s._v(" "),a("li",[s._v("1:1\n"),a("ul",[a("li",[s._v("缺点：协程创建、删除和切换的代价都依赖CPU线程完成，代价昂贵")])])]),s._v(" "),a("li",[s._v("M:N\n"),a("ul",[a("li",[s._v("克服了以上缺点")])])])])]),s._v(" "),a("li",[s._v("线程&协程区别\n"),a("ul",[a("li",[s._v("占用空间")]),s._v(" "),a("li",[s._v("调度：抢占式vs协作式（协程让出CPU后才执行下一个协程）")])])])]),s._v(" "),a("h4",{attrs:{id:"goroutine调度器的gmp模型设计思想"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#goroutine调度器的gmp模型设计思想"}},[s._v("#")]),s._v(" Goroutine调度器的GMP模型设计思想")]),s._v(" "),a("h5",{attrs:{id:"go语言的协程goroutine"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#go语言的协程goroutine"}},[s._v("#")]),s._v(" Go语言的协程goroutine")]),s._v(" "),a("ul",[a("li",[s._v("goroutine&channel")]),s._v(" "),a("li",[s._v("特点\n"),a("ul",[a("li",[s._v("占用内存更小")]),s._v(" "),a("li",[s._v("调度更灵活")])])])]),s._v(" "),a("h5",{attrs:{id:"旧版goroutine调度器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#旧版goroutine调度器"}},[s._v("#")]),s._v(" 旧版goroutine调度器")]),s._v(" "),a("p",[s._v("Go目前使用的调度器是2012年重新设计的，因为之前的调度器性能存在问题，所以使用4年就被废弃了，那么我们先来分析一下被废弃的调度器是如何运作的？\n"),a("img",{attrs:{src:"https://pic.fengyuwusong.cn/20220509002839.png",alt:"GPM模型"}}),s._v(" "),a("img",{attrs:{src:"https://pic.fengyuwusong.cn/20220509002636.png",alt:"旧版调度流程"}})]),s._v(" "),a("ul",[a("li",[s._v("缺点\n"),a("ol",[a("li",[s._v("创建、销毁、调度G都需要每个M获取锁，这就形成了激烈的锁竞争。")]),s._v(" "),a("li",[s._v("M转移G会造成延迟和额外的系统负载。比如当G中包含创建新协程的时候，M创建了G’，为了继续执行G，需要把G’交给M’执行，也造成了很差的局部性，因为G’和G是相关的，最好放在M上执行，而不是其他M'。")]),s._v(" "),a("li",[s._v("系统调用(CPU在M之间的切换)导致频繁的线程阻塞和取消阻塞操作增加了系统开销。")])])])]),s._v(" "),a("h5",{attrs:{id:"gmp模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gmp模型"}},[s._v("#")]),s._v(" GMP模型")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://pic.fengyuwusong.cn/20220509002911.png",alt:"GPM模型"}})]),s._v(" "),a("ul",[a("li",[s._v("模型相关\n"),a("ol",[a("li",[s._v("全局队列（Global Queue）：存放等待运行的G。")]),s._v(" "),a("li",[s._v("P的本地队列：同全局队列类似，存放的也是等待运行的G，存的数量有限，不超过256个。新建G'时，G'优先加入到P的本地队列，如果队列满了，则会把本地队列中一半的G移动到全局队列。")]),s._v(" "),a("li",[s._v("P列表：所有的P都在程序启动时创建，并保存在数组中，最多有GOMAXPROCS(可配置)个。")]),s._v(" "),a("li",[s._v("M：线程想运行任务就得获取P，从P的本地队列获取G，P队列为空时，M也会尝试从全局队列拿一批G放到P的本地队列，或从其他P的本地队列偷一半放到自己P的本地队列。M运行G，G执行之后，M会从P获取下一个G，不断重复下去。")])])]),s._v(" "),a("li",[s._v("P和M的个数问题\n"),a("ul",[a("li",[s._v("P的数量\n"),a("ul",[a("li",[s._v("由启动时环境变量"),a("code",[s._v("$GOMAXPROCS")]),s._v("或者是由"),a("code",[s._v("runtime")]),s._v("的方法"),a("code",[s._v("GOMAXPROCS()")]),s._v("决定。这意味着在程序执行的任意时刻都只有"),a("code",[s._v("$GOMAXPROCS个goroutine")]),s._v("在同时运行。")]),s._v(" "),a("li",[s._v("M的数量\n"),a("ul",[a("li",[s._v("go语言本身的限制：go程序启动时，会设置M的最大数量，默认10000.但是内核很难支持这么多的线程数，所以这个限制可以忽略。")]),s._v(" "),a("li",[a("code",[s._v("runtime/debug")]),s._v("中的"),a("code",[s._v("SetMaxThreads")]),s._v("函数，设置M的最大数量")]),s._v(" "),a("li",[s._v("一个M阻塞了，会创建新的M。")])])]),s._v(" "),a("li",[s._v("P和M的关系\n"),a("ul",[a("li",[s._v("M与P的数量没有绝对关系，一个M阻塞，P就会去创建或者切换另一个M，所以，即使P的默认数量是1，也有可能会创建很多个M出来。")])])]),s._v(" "),a("li",[s._v("P和M何时被创建\n"),a("ul",[a("li",[s._v("P：在确定P的最大数量n后，运行时系统会根据这个数量创建n个P")]),s._v(" "),a("li",[s._v("M：没有足够的M来关联P并运行其中可运行的G。比如所有的M此时都阻塞住了，而P中还有很多就绪任务，就会去寻找空闲的M，而没有空闲的，就会去创建新的M。")])])])])])])])]),s._v(" "),a("h5",{attrs:{id:"调度器的设计策略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#调度器的设计策略"}},[s._v("#")]),s._v(" 调度器的设计策略")]),s._v(" "),a("ul",[a("li",[s._v("复用线程\n"),a("ul",[a("li",[s._v("work stealing机制：当本线程无可运行的G时，尝试从其他线程绑定的P偷取G，而不是销毁线程。")]),s._v(" "),a("li",[s._v("hand off机制：当本线程因为G进行系统调用阻塞时，线程释放绑定的P，把P转移给其他空闲的线程执行。")])])]),s._v(" "),a("li",[s._v("利用并行\n"),a("ul",[a("li",[s._v("GOMAXPROCS设置P的数量，最多有GOMAXPROCS个线程分布在多个CPU上同时运行。GOMAXPROCS也限制了并发的程度，比如GOMAXPROCS = 核数/2，则最多利用了一半的CPU核进行并行。")])])]),s._v(" "),a("li",[s._v("抢占\n"),a("ul",[a("li",[s._v("在coroutine中要等待一个协程主动让出CPU才执行下一个协程，"),a("strong",[s._v("在Go中，一个goroutine最多占用CPU 10ms，防止其他goroutine被饿死，这就是goroutine不同于coroutine的一个地方。")])])])]),s._v(" "),a("li",[s._v("全局G队列\n"),a("ul",[a("li",[s._v("在新的调度器中依然有全局G队列，但功能已经被弱化了，当M执行work stealing从其他P偷不到G时，它可以从全局G队列获取G。")])])])]),s._v(" "),a("h5",{attrs:{id:"go-func-调度流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#go-func-调度流程"}},[s._v("#")]),s._v(" "),a("code",[s._v("go func()")]),s._v("调度流程")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://pic.fengyuwusong.cn/20220509004938.png",alt:"go func()调度流程"}})]),s._v(" "),a("p",[s._v("1、我们通过 go func()来创建一个goroutine；\n2、有两个存储G的队列，一个是局部调度器P的本地队列、一个是全局G队列。新创建的G会先保存在P的本地队列中，如果P的本地队列已经满了就会保存在全局的队列中；\n3、G只能运行在M中，一个M必须持有一个P，M与P是1：1的关系。M会从P的本地队列弹出一个可执行状态的G来执行，如果P的本地队列为空，就会想其他的MP组合偷取一个可执行的G来执行；\n4、一个M调度G执行的过程是一个循环机制；\n5、当M执行某一个G时候如果发生了syscall或则其余阻塞操作，M会阻塞，如果当前有一些G在执行，runtime会把这个线程M从P中摘除(detach)，然后再创建一个新的操作系统的线程(如果有空闲的线程可用就复用空闲线程)来服务于这个P；\n6、当M系统调用结束时候，这个G会尝试获取一个空闲的P执行，并放入到这个P的本地队列。如果获取不到P，那么这个线程M变成休眠状态， 加入到空闲线程中，然后这个G会被放入全局队列中。")]),s._v(" "),a("h5",{attrs:{id:"调度器的生命周期"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#调度器的生命周期"}},[s._v("#")]),s._v(" 调度器的生命周期")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://pic.fengyuwusong.cn/20220509005403.png",alt:"调度器的声生命周期"}})]),s._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("package")]),s._v(" main\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"fmt"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    fmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello world"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("ul",[a("li",[s._v("M0&G0\n"),a("ul",[a("li",[s._v("M0是启动程序后的编号为0的主线程，这个M对应的实例会在全局变量runtime.m0中，不需要在heap上分配，M0负责执行初始化操作和启动第一个G， 在之后M0就和其他的M一样了。")]),s._v(" "),a("li",[s._v("G0是每次启动一个M都会第一个创建的gourtine，G0仅用于负责调度的G，G0不指向任何可执行的函数, 每个M都会有一个自己的G0。在调度或系统调用时会使用G0的栈空间, 全局变量的G0是M0的G0。")])])]),s._v(" "),a("li",[s._v("生命周期流程\n"),a("ol",[a("li",[s._v("runtime创建最初的线程m0和goroutine g0，并把2者关联。")]),s._v(" "),a("li",[s._v("调度器初始化：初始化m0、栈、垃圾回收，以及创建和初始化由GOMAXPROCS个P构成的P列表。")]),s._v(" "),a("li",[s._v("示例代码中的main函数是main.main，runtime中也有1个main函数——runtime.main，代码经过编译后，runtime.main会调用main.main，程序启动时会为runtime.main创建goroutine，称它为main goroutine吧，然后把main goroutine加入到P的本地队列。")]),s._v(" "),a("li",[s._v("启动m0，m0已经绑定了P，会从P的本地队列获取G，获取到main goroutine。")]),s._v(" "),a("li",[s._v("G拥有栈，M根据G中的栈信息和调度信息设置运行环境")]),s._v(" "),a("li",[s._v("M运行G")]),s._v(" "),a("li",[s._v("G退出，再次回到M获取可运行的G，这样重复下去，直到main.main退出，runtime.main执行Defer和Panic处理，或调用runtime.exit退出程序。")])])])]),s._v(" "),a("h5",{attrs:{id:"可视化gmp编程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#可视化gmp编程"}},[s._v("#")]),s._v(" 可视化GMP编程")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("go tool trace")])])]),s._v(" "),a("p",[s._v("trace记录了运行时的信息，能提供可视化的Web页面。")]),s._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("package")]),s._v(" main\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"os"')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"fmt"')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"runtime/trace"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//创建trace文件")]),s._v("\n    f"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" err "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" os"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Create")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"trace.out"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" err "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("nil")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("panic")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("err"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("defer")]),s._v(" f"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Close")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//启动trace goroutine")]),s._v("\n    err "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" trace"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Start")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("f"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" err "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("nil")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("panic")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("err"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("defer")]),s._v(" trace"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Stop")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//main")]),s._v("\n    fmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello World"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br")])]),a("ul",[a("li",[a("code",[s._v("Debug trace")])])]),s._v(" "),a("p",[s._v("编译二进制包后使用以下方式执行")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("  $ "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("GODEBUG")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("schedtrace"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),s._v(" ./trace2\n  SCHED 0ms: "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("gomaxprocs")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("idleprocs")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("threads")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("spinningthreads")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("idlethreads")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("runqueue")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n  Hello World\n  SCHED 1003ms: "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("gomaxprocs")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("idleprocs")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("threads")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("spinningthreads")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("idlethreads")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("runqueue")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n  Hello World\n  SCHED 2014ms: "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("gomaxprocs")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("idleprocs")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("threads")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("spinningthreads")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("idlethreads")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("runqueue")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n  Hello World\n  SCHED 3015ms: "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("gomaxprocs")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("idleprocs")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("threads")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("spinningthreads")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("idlethreads")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("runqueue")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n  Hello World\n  SCHED 4023ms: "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("gomaxprocs")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("idleprocs")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("threads")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("spinningthreads")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("idlethreads")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("runqueue")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n  Hello World\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("ul",[a("li",[s._v("执行方式："),a("code",[s._v("GODEBUG=schedtrace=1000 ./trace2")])]),s._v(" "),a("li",[s._v("说明\n"),a("ul",[a("li",[s._v("SCHED：调试信息输出标志字符串，代表本行是goroutine调度器的输出；")]),s._v(" "),a("li",[s._v("0ms：即从程序启动到输出这行日志的时间；")]),s._v(" "),a("li",[s._v("gomaxprocs: P的数量，本例有2个P, 因为默认的P的属性是和cpu核心数量默认一致，当然也可以通过GOMAXPROCS来设置；")]),s._v(" "),a("li",[s._v("idleprocs: 处于idle状态的P的数量；通过gomaxprocs和idleprocs的差值，我们就可知道执行go代码的P的数量；")]),s._v(" "),a("li",[s._v("threads: os threads/M的数量，包含scheduler使用的m数量，加上runtime自用的类似sysmon这样的thread的数量；")]),s._v(" "),a("li",[s._v("spinningthreads: 处于自旋状态的os thread数量；")]),s._v(" "),a("li",[s._v("idlethread: 处于idle状态的os thread的数量；")]),s._v(" "),a("li",[s._v("runqueue=0： Scheduler全局队列中G的数量；")]),s._v(" "),a("li",[s._v("[0 0]: 分别为2个P的local queue中的G的数量。")])])])]),s._v(" "),a("h4",{attrs:{id:"go调度器调度场景过程全解析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#go调度器调度场景过程全解析"}},[s._v("#")]),s._v(" Go调度器调度场景过程全解析")]),s._v(" "),a("p",[s._v("具体参考下列文章，重点如下：")]),s._v(" "),a("ul",[a("li",[s._v("新建G会优先放到当前的P本地队列")]),s._v(" "),a("li",[s._v("M执行完G时，会先切换G0负责协程的调度切换，从而执行下一个G")]),s._v(" "),a("li",[s._v("当开辟过多G，P本地队列装不下的时候，则会执行负载均衡（把P本地队列前一半的G和新建的G打乱顺序转移到全局队列【新建的G不一定会转移，需视是否需立即执行决定】）")]),s._v(" "),a("li",[s._v("创建G时，运行的G会尝试唤醒其他空闲的P和M组合去执行")]),s._v(" "),a("li",[s._v("空闲M从全局队列GQ获取G的数量符合公式："),a("code",[s._v("n = min(len(GQ) / GOMAXPROCS + 1, cap(LQ) / 2 )")])]),s._v(" "),a("li",[s._v("如全局队列已经没有G，则m需要自行"),a("code",[s._v("work stealing")]),s._v(": 从其他P的本地队列中偷取一半的G，放到自己的P队列")]),s._v(" "),a("li",[s._v("空闲线程如没有G执行，则会让其处于自旋状态【由于创建销毁本身也需消耗资源，故保存自旋当有新的G时可立马执行】，最多有GOMAXPROCS个自旋线程")]),s._v(" "),a("li",[s._v("当G进行了系统调用时，则M和P会立即解绑，此时如P本地队列存在G、全局队列有G或有空闲的M，P都会立马唤醒一个M和它绑定，否则P会加入空闲P列表，等待M来获取【即当前M用于执行阻塞系统调用的G，此时M无P绑定】")]),s._v(" "),a("li",[s._v("假设G进行的系统调用并非阻塞，则M执行完毕系统后，G会重新投入G全局队列中并标记为可运行状态，同时M会重新尝试获取之前绑定的P，如该P已被其他M绑定，则从空闲队列中获取P，如仍获取失败则M因为没有P的绑定而变成休眠状态(长时间休眠等待GC回收销毁)。")])]),s._v(" "),a("h4",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[s._v("#")]),s._v(" 总结")]),s._v(" "),a("p",[s._v("Go调度本质是把大量的goroutine分配到少量线程上去执行，并利用多核并行，实现更强大的并发。")]),s._v(" "),a("h4",{attrs:{id:"参考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[s._v("#")]),s._v(" 参考")]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://www.yuque.com/aceld/golang/srxd6d",target:"_blank",rel:"noopener noreferrer"}},[s._v("Golang的协程调度器原理及GMP设计思想"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=e.exports}}]);