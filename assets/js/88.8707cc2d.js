(window.webpackJsonp=window.webpackJsonp||[]).push([[88],{427:function(t,a,s){"use strict";s.r(a);var n=s(0),r=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h3",{attrs:{id:"前置知识"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前置知识"}},[t._v("#")]),t._v(" 前置知识")]),t._v(" "),a("h4",{attrs:{id:"cap"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cap"}},[t._v("#")]),t._v(" CAP")]),t._v(" "),a("p",[t._v("CAP理论是分布式系统、特别是分布式存储领域中被讨论的最多的理论。其中C代表一致性 (Consistency)，A代表可用性 (Availability)，P代表分区容错性 (Partition tolerance)。CAP理论告诉我们C、A、P三者不能同时满足，最多只能满足其中两个。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pdai.tech/_images/arch/arch-cap-1.png",alt:"cap描述"}})]),t._v(" "),a("ul",[a("li",[t._v("Consistency（一致性）一个写操作返回成功，那么之后的读请求都必须读到这个新数据；如果返回失败，那么所有读操作都不能读到这个数据。所有节点访问同一份最新的数据。")]),t._v(" "),a("li",[t._v("Availability（可用性）对数据更新具备高可用性，请求能够及时处理，不会一直等待，即使出现节点失效。")]),t._v(" "),a("li",[t._v("Partition tolerance（分区性容错性）能容忍网络分区，在网络断开的情况下，被分隔的节点仍能正常对外提供服务。")])]),t._v(" "),a("h5",{attrs:{id:"思考题-对cap的理解-为什么只能满足两个"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#思考题-对cap的理解-为什么只能满足两个"}},[t._v("#")]),t._v(" 思考题：对CAP的理解（为什么只能满足两个？）")]),t._v(" "),a("p",[t._v("假设放弃P，考虑CA。")]),t._v(" "),a("h5",{attrs:{id:"现有系统符合的种类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#现有系统符合的种类"}},[t._v("#")]),t._v(" 现有系统符合的种类")]),t._v(" "),a("p",[t._v("CA: 不需要分区的数据库（单机mysql、mongo等）\nCP: 需要分区和强一致性而放弃了可用性的系统（ACID强事务型数据库）\nAP: 需要分区和高可用而放弃了可用性的系统（非事务型数据库、大多数互联网应用）")]),t._v(" "),a("h4",{attrs:{id:"base"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#base"}},[t._v("#")]),t._v(" BASE")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pdai.tech/_images/arch/arch-cap-2.png",alt:"base 描述"}})]),t._v(" "),a("ul",[a("li",[t._v("Basically Available（基本可用）分布式系统在出现不可预知故障的时候，允许损失部分可用性")]),t._v(" "),a("li",[t._v("Soft state（软状态）软状态也称为弱状态，和硬状态相对，是指允许系统中的数据存在中间状态，并认为该中间状态的存在不会影响系统的整体可用性，即允许系统在不同节点的数据副本之间进行数据同步的过程存在延时")]),t._v(" "),a("li",[t._v("Eventually consistent（最终一致性）最终一致性强调的是系统中所有的数据副本，在经过一段时间的同步后，最终能够达到一个一致的状态。因此，最终一致性的本质是需要系统保证最终数据能够达到一致，而不需要实时保证系统数据的强一致性")])]),t._v(" "),a("p",[t._v("BASE是对CAP中一致性和可用性权衡的结果，其来源于对大规模互联网系统分布式实践的结论，是基于CAP定理逐步演化而来的，其核心思想是即使无法做到强一致性（Strong consistency），更具体地说，"),a("strong",[t._v("是对 CAP 中 AP 方案的一个补充")]),t._v("。\n其基本思路就是：通过业务，牺牲强一致性而获得可用性，并允许数据在一段时间内是不一致的，但是最终达到一致性状态。")]),t._v(" "),a("h4",{attrs:{id:"数据库事务定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据库事务定义"}},[t._v("#")]),t._v(" 数据库事务定义")]),t._v(" "),a("p",[t._v("把多条语句作为一个整体进行操作的功能，被称为数据库事务。数据库事务可以确保该事务范围内的所有操作都可以全部成功或者全部失败。")]),t._v(" "),a("h4",{attrs:{id:"acid"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#acid"}},[t._v("#")]),t._v(" ACID")]),t._v(" "),a("ul",[a("li",[t._v("Atomicity（原子性）：事务被视为不可分割的最小单元，事务的所有操作要么全部提交成功，要么全部失败回滚。")]),t._v(" "),a("li",[t._v("Consistency（一致性）：数据库在事务执行前后都保持一致性状态。在一致性状态下，所有事务对同一个数据的读取结果都是相同的。")]),t._v(" "),a("li",[t._v("Isolation（隔离性）：一个事务所做的修改在最终提交以前，对其它事务是不可见的。")]),t._v(" "),a("li",[t._v("Durability（持久性）：一旦事务提交，则其所做的修改将会永远保存到数据库中。即使系统发生崩溃，事务执行的结果也不能丢失。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://camo.githubusercontent.com/d688683e3f6fb14d059412247e4f427a7cd1aa7686417bc552e061628f24dd84/68747470733a2f2f63732d6e6f7465732d313235363130393739362e636f732e61702d6775616e677a686f752e6d7971636c6f75642e636f6d2f696d6167652d32303139313230373231303433373032332e706e67",alt:"enter image description here"}})]),t._v(" "),a("h5",{attrs:{id:"思考题-如何实现原子性和持久性的回滚和丢失恢复"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#思考题-如何实现原子性和持久性的回滚和丢失恢复"}},[t._v("#")]),t._v(" 思考题：如何实现原子性和持久性的回滚和丢失恢复？")]),t._v(" "),a("p",[t._v("Undo Log、Redo Log")]),t._v(" "),a("h4",{attrs:{id:"并发一致性问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#并发一致性问题"}},[t._v("#")]),t._v(" 并发一致性问题")]),t._v(" "),a("ul",[a("li",[t._v("丢失修改")]),t._v(" "),a("li",[t._v("读脏数据")]),t._v(" "),a("li",[t._v("不可重复读")]),t._v(" "),a("li",[t._v("幻影读")])]),t._v(" "),a("h4",{attrs:{id:"事务隔离级别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事务隔离级别"}},[t._v("#")]),t._v(" 事务隔离级别")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://camo.githubusercontent.com/1632a88a3a4fa7954026cb939edf2f8a30bb5d60a1bce4921c7e0d0e4d245739/68747470733a2f2f63732d6e6f7465732d313235363130393739362e636f732e61702d6775616e677a686f752e6d7971636c6f75642e636f6d2f696d6167652d32303139313230373232333430303738372e706e67",alt:"enter image description here"}})]),t._v(" "),a("h4",{attrs:{id:"不同隔离级别实现原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#不同隔离级别实现原理"}},[t._v("#")]),t._v(" 不同隔离级别实现原理")]),t._v(" "),a("p",[t._v("未提交读：一直读最新数据\n提交读、可重复读：MVCC\n可串行化隔离级别需要对所有读取的行都加锁（Next-Key Locks），单纯使用 MVCC 无法实现。")]),t._v(" "),a("h5",{attrs:{id:"mvcc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mvcc"}},[t._v("#")]),t._v(" MVCC")]),t._v(" "),a("p",[t._v("TODO")]),t._v(" "),a("h5",{attrs:{id:"next-key-locks"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#next-key-locks"}},[t._v("#")]),t._v(" Next-Key Locks")]),t._v(" "),a("p",[t._v("TODO")]),t._v(" "),a("h4",{attrs:{id:"封锁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#封锁"}},[t._v("#")]),t._v(" 封锁")]),t._v(" "),a("ul",[a("li",[t._v("读写锁、意向锁： TODO")]),t._v(" "),a("li",[t._v("封锁协议：TODO")])]),t._v(" "),a("h3",{attrs:{id:"本地事务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#本地事务"}},[t._v("#")]),t._v(" 本地事务")]),t._v(" "),a("p",[t._v("本地事务是指仅操作单一事务资源的、不需要全局事务管理器进行协调的事务。")]),t._v(" "),a("h4",{attrs:{id:"实现原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现原理"}},[t._v("#")]),t._v(" 实现原理")]),t._v(" "),a("p",[t._v("数据库本身支持事务。")]),t._v(" "),a("h4",{attrs:{id:"应用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#应用场景"}},[t._v("#")]),t._v(" 应用场景")]),t._v(" "),a("p",[t._v("单个服务使用单个数据源的场景。\n例如最简单的单机单数据源多表转账服务。")]),t._v(" "),a("h3",{attrs:{id:"全局事务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#全局事务"}},[t._v("#")]),t._v(" 全局事务")]),t._v(" "),a("h4",{attrs:{id:"定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定义"}},[t._v("#")]),t._v(" 定义")]),t._v(" "),a("p",[t._v("与本地事务相对的是全局事务（Global Transaction）\n全局事务被限定为一种适用于单个服务使用多个数据源场景的事务解决方案。")]),t._v(" "),a("h4",{attrs:{id:"实现原理-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现原理-2"}},[t._v("#")]),t._v(" 实现原理")]),t._v(" "),a("ul",[a("li",[t._v("思考题：以下代码有什么问题？")])]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("buyBook")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PaymentBill")]),t._v(" bill"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    userTransaction"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("begin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    warehouseTransaction"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("begin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    businessTransaction"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("begin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        userAccountService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pay")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bill"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getMoney")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        warehouseService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("deliver")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bill"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getItems")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        businessAccountService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("receipt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bill"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getMoney")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        userTransaction"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("commit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        warehouseTransaction"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("commit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        businessTransaction"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("commit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        userTransaction"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rollback")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        warehouseTransaction"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rollback")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        businessTransaction"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rollback")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br")])]),a("h5",{attrs:{id:"xa"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#xa"}},[t._v("#")]),t._v(" XA")]),t._v(" "),a("p",[t._v("XA是由X/Open组织提出的分布式事务的规范，XA规范主要定义了(全局)事务管理器(TM)和(局部)资源管理器(RM)之间的接口。本地的数据库如mysql在XA中扮演的是RM角色。")]),t._v(" "),a("h5",{attrs:{id:"_2pc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2pc"}},[t._v("#")]),t._v(" 2PC")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://www.dtm.pub/assets/xa_normal.5a0ce600.jpg",alt:"enter image description here"}})]),t._v(" "),a("p",[a("strong",[t._v("准备阶段")]),t._v("：又叫作投票阶段，在这一阶段，协调者询问事务的所有参与者是否准备好提交，参与者如果已经准备好提交则回复 Prepared，否则回复 Non-Prepared。这里所说的准备操作跟人类语言中通常理解的准备并不相同，对于数据库来说，准备操作是在重做日志中记录全部事务提交操作所要做的内容，它与本地事务中真正提交的区别只是暂不写入最后一条 Commit Record 而已，这意味着在做完数据持久化后并不立即释放隔离性，即仍继续持有锁，维持数据对其他非事务内观察者的隔离状态。\n"),a("strong",[t._v("提交阶段")]),t._v("：又叫作执行阶段，协调者如果在上一阶段收到所有事务参与者回复的 Prepared 消息，则先自己在本地持久化事务状态为 Commit，在此操作完成后向所有参与者发送 Commit 指令，所有参与者立即执行提交操作；否则，任意一个参与者回复了 Non-Prepared 消息，或任意一个参与者超时未回复，协调者将自己的事务状态持久化为 Abort 之后，向所有参与者发送 Abort 指令，参与者立即执行回滚操作。对于数据库来说，这个阶段的提交操作应是很轻量的，仅仅是持久化一条 Commit Record 而已，通常能够快速完成，只有收到 Abort 指令时，才需要根据回滚日志清理已提交的数据，这可能是相对重负载的操作。")]),t._v(" "),a("ul",[a("li",[t._v("2PC存在的问题\n"),a("ul",[a("li",[t._v("单点问题")]),t._v(" "),a("li",[t._v("性能问题")]),t._v(" "),a("li",[t._v("一致性风险")])])])]),t._v(" "),a("h5",{attrs:{id:"_3pc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3pc"}},[t._v("#")]),t._v(" 3PC")]),t._v(" "),a("p",[t._v("增加CanCommit询问阶段，增加成功概率，一定程度解决单点和性能问题。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://blog-1251737177.cos.ap-guangzhou.myqcloud.com/20220826160139.png",alt:"enter image description here"}})]),t._v(" "),a("h3",{attrs:{id:"共享事务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#共享事务"}},[t._v("#")]),t._v(" 共享事务")]),t._v(" "),a("h4",{attrs:{id:"定义-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定义-2"}},[t._v("#")]),t._v(" 定义")]),t._v(" "),a("p",[t._v("共享事务（Share Transaction）是指多个服务共用同一个数据源。")]),t._v(" "),a("h4",{attrs:{id:"实现原理-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现原理-3"}},[t._v("#")]),t._v(" 实现原理")]),t._v(" "),a("ul",[a("li",[t._v("多个服务共享数据库链接（新增应用用于串行化执行多个微服务对于数据库的操作）")]),t._v(" "),a("li",[t._v("使用消息队列")]),t._v(" "),a("li",[t._v("分布式锁")])]),t._v(" "),a("h4",{attrs:{id:"应用场景-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#应用场景-2"}},[t._v("#")]),t._v(" 应用场景")]),t._v(" "),a("p",[t._v("目前软总线服务上多个微服务同时读写设备表。")]),t._v(" "),a("h3",{attrs:{id:"分布式事务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分布式事务"}},[t._v("#")]),t._v(" 分布式事务")]),t._v(" "),a("ul",[a("li",[t._v("思考题：以下流程存在什么问题？")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://blog-1251737177.cos.ap-guangzhou.myqcloud.com/20220826161614.png",alt:""}})]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("场景事例\n\nFenix's Bookstore 是一个在线书店。每当一本书被成功售出时，需要确保以下三件事情被正确地处理：\n\n用户的账号扣减相应的商品款项。\n商品仓库中扣减库存，将商品标识为待配送状态。\n商家的账号增加相应的商品款项。\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://blog-1251737177.cos.ap-guangzhou.myqcloud.com/20220826162159.png",alt:""}})]),t._v(" "),a("h4",{attrs:{id:"定义-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定义-3"}},[t._v("#")]),t._v(" 定义")]),t._v(" "),a("p",[t._v("多个服务同时访问多个数据源的事务处理机制，目前仅支持柔性事务。")]),t._v(" "),a("ul",[a("li",[t._v("刚性事务：达到实现强一致性的事务（目前无法实现，具体参考："),a("a",{attrs:{href:"https://www.dtm.pub/practice/theory.html#%E6%97%A0%E6%B3%95%E5%BC%BA%E4%B8%80%E8%87%B4",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.dtm.pub/practice/theory.html#无法强一致"),a("OutboundLink")],1),t._v("）")]),t._v(" "),a("li",[t._v("柔性事务：达到实现最终一致性的事务")])]),t._v(" "),a("h4",{attrs:{id:"解决方案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解决方案"}},[t._v("#")]),t._v(" 解决方案")]),t._v(" "),a("ul",[a("li",[t._v("最大努力交付/通知（接收方保证一致性）")]),t._v(" "),a("li",[t._v("本地/事务消息表消息表（消息队列保证）")]),t._v(" "),a("li",[t._v("AT")]),t._v(" "),a("li",[t._v("XA")]),t._v(" "),a("li",[t._v("二阶段消息")]),t._v(" "),a("li",[t._v("Workflow")]),t._v(" "),a("li",[t._v("SAGA")]),t._v(" "),a("li",[t._v("TCC")])]),t._v(" "),a("h5",{attrs:{id:"本地消息表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#本地消息表"}},[t._v("#")]),t._v(" 本地消息表")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://dtm.pub/assets/local_msg_table.089f1fd3.jpg",alt:"enter image description here"}})]),t._v(" "),a("h5",{attrs:{id:"saga"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#saga"}},[t._v("#")]),t._v(" SAGA")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://dtm.pub/assets/saga_normal.a2849672.jpg",alt:"enter image description here"}})]),t._v(" "),a("h5",{attrs:{id:"tcc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tcc"}},[t._v("#")]),t._v(" TCC")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://dtm.pub/assets/tcc_normal.dea14fb3.jpg",alt:"enter image description here"}})]),t._v(" "),a("h5",{attrs:{id:"xa-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#xa-2"}},[t._v("#")]),t._v(" XA")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://dtm.pub/assets/xa_normal.5a0ce600.jpg",alt:"enter image description here"}})]),t._v(" "),a("h5",{attrs:{id:"二阶消息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二阶消息"}},[t._v("#")]),t._v(" 二阶消息")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://dtm.pub/assets/msg_normal.25a4cb15.jpg",alt:"enter image description here"}})]),t._v(" "),a("h4",{attrs:{id:"如何选择合适的模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何选择合适的模式"}},[t._v("#")]),t._v(" 如何选择合适的模式")]),t._v(" "),a("ul",[a("li",[t._v("二阶段消息模式: 适合不需要回滚的场景")]),t._v(" "),a("li",[t._v("saga模式: 适合需要回滚的场景")]),t._v(" "),a("li",[t._v("tcc事务模式: 适合一致性要求较高的场景")]),t._v(" "),a("li",[t._v("xa事务模式: 适合并发要求不高，没有数据库行锁争抢的场景")])]),t._v(" "),a("h4",{attrs:{id:"应用场景-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#应用场景-3"}},[t._v("#")]),t._v(" 应用场景")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://dtm.pub/app/intro.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://dtm.pub/app/intro.html"),a("OutboundLink")],1)]),t._v(" "),a("h4",{attrs:{id:"npc问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#npc问题"}},[t._v("#")]),t._v(" NPC问题")]),t._v(" "),a("h5",{attrs:{id:"定义-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定义-4"}},[t._v("#")]),t._v(" 定义")]),t._v(" "),a("ul",[a("li",[t._v("网络延迟")]),t._v(" "),a("li",[t._v("进程暂停")]),t._v(" "),a("li",[t._v("时钟漂移")])]),t._v(" "),a("h5",{attrs:{id:"异常分类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#异常分类"}},[t._v("#")]),t._v(" 异常分类")]),t._v(" "),a("ul",[a("li",[t._v("空补偿")]),t._v(" "),a("li",[t._v("悬挂")]),t._v(" "),a("li",[t._v("幂等")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://www.dtm.pub/assets/exception.4254ab59.jpg",alt:"enter image description here"}})]),t._v(" "),a("h5",{attrs:{id:"解决方案-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解决方案-2"}},[t._v("#")]),t._v(" 解决方案")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.dtm.pub/practice/barrier.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.dtm.pub/practice/barrier.html"),a("OutboundLink")],1)]),t._v(" "),a("h5",{attrs:{id:"最佳实践"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#最佳实践"}},[t._v("#")]),t._v(" 最佳实践")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/nivin-studio/go-zero-mall",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/nivin-studio/go-zero-mall"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"参考链接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考链接"}},[t._v("#")]),t._v(" 参考链接")]),t._v(" "),a("p",[t._v("凤凰架构："),a("a",{attrs:{href:"http://icyfenix.cn/architect-perspective/general-architecture/transaction/",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://icyfenix.cn/architect-perspective/general-architecture/transaction/"),a("OutboundLink")],1),t._v("\n数据库系统原理："),a("a",{attrs:{href:"https://github.com/CyC2018/CS-Notes/blob/master/notes/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%8E%9F%E7%90%86.md#%E4%B8%80%E4%BA%8B%E5%8A%A1",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/CyC2018/CS-Notes/blob/master/notes/数据库系统原理.md#一事务"),a("OutboundLink")],1),t._v("\nDTM官网："),a("a",{attrs:{href:"https://www.dtm.pub/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.dtm.pub/"),a("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=r.exports}}]);